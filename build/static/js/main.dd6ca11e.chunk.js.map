{"version":3,"sources":["components/marvel.gif","components/pages/Home.js","components/Loader/Loader.js","components/Cast/Member.js","components/movieRelated/FullMovie.js","components/movieRelated/Movie.js","components/navbar.js","components/movieRelated/MovieList.js","App.js","index.js"],"names":["module","exports","Home","style","overflow","className","to","type","Component","Loader","display","alignItems","height","src","loading","margin","width","alt","Member","props","undefined","details","profile_path","href","textDecoration","color","border","boxShadow","marginBottom","paddingTop","textAlign","name","padding","character","FullMovie","url","movie","getMovieById","match","useEffect","params","id","backdrop_path","background","title","overview","fontWeight","marginTop","marginLeft","fontStyle","fontSize","genres","map","genre","key","paddingBottom","time","hrs","min","parseInt","convToTime","runtime","moment","release_date","format","vote_average","credits","cast","slice","member","indexOf","Movie","this","poster_path","opacity","lineHeight","substring","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","MovieList","getDefaultMovies","gridTemplateColumns","gridGap","movieList","App","useState","setmovie","setLoading","setmovieList","a","axios","get","res","data","console","log","results","exact","path","component","render","ReactDOM","document","getElementById"],"mappings":"gFAAAA,EAAOC,QAAU,IAA0B,oC,uPC8B5BC,EA3Bf,uKAEI,OACE,yBACEC,MAAO,CAAEC,SAAU,UACnBC,UAAU,iEAQV,yBAAKA,UAAU,eACb,kBAAC,IAAD,CACEC,GAAG,WACHD,UAAU,gCACVE,KAAK,UAHP,kBAdV,GAA0BC,a,kCCaXC,EAdf,uKAEI,OACE,yBAAKN,MAAO,CAAEO,QAAS,OAAQC,WAAY,SAAUC,OAAQ,UAC3D,yBACEC,IAAKC,IACLX,MAAO,CAAEO,QAAS,QAASK,OAAQ,OAAQC,MAAO,SAClDC,IAAI,oBAPd,GAA4BT,a,QC8CbU,EA9CO,SAAAC,GAIjB,IAAD,EAHF,YACiCC,IAA/BD,EAAME,QAAQC,cACiB,OAA/BH,EAAME,QAAQC,aAGZ,uBACEC,KAAK,IACLlB,UAAU,OACVF,OAAK,GACHqB,eAAgB,OAChBC,MAAO,OACPC,OAAQ,OACRV,MAAO,UAJJ,uBAKK,qBALL,wBAMM,UANN,2BAOS,uBAPT,IAUL,yBACEH,IAAG,yCAAoCM,EAAME,QAAQC,cACrDjB,UAAU,eACVF,MAAO,CACLwB,UAAW,wCACXjB,QAAS,eACTE,OAAQ,WAEVK,IAAI,QAEN,uBACEd,MAAO,CACLyB,aAAc,WACdC,WAAY,SACZC,UAAW,WAGZX,EAAME,QAAQU,MAEjB,0BAAM5B,MAAO,CAAE2B,UAAW,SAAUE,QAAS,WAA7C,MACA,uBAAG3B,UAAU,eAAec,EAAME,QAAQY,YAIvC,M,iBCiGIC,EAhIG,SAAC,GAA6C,IAC1DC,EADeC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,MAAOxB,EAAc,EAAdA,QAQ/C,OANAyB,qBAAU,WACRF,EAAaC,EAAME,OAAOC,MAGzB,IACHN,EAAG,6CAAyCC,EAAMM,eAC9C5B,EACK,kBAAC,EAAD,MAGP,6BACE,yBACET,UAAU,gBACVF,MAAO,CACLS,OAAQ,QACRI,MAAO,QACP2B,WAAW,OAAD,OAASR,EAAT,qCAGZ,kBAAC,IAAD,CAAM7B,GAAI,WACR,uBAAGD,UAAU,qCAEf,yBAAKA,UAAU,aACb,yBAAKA,UAAU,cACZ,IAED,yBAAKA,UAAU,eAAe+B,EAAMQ,OACpC,yBAAKvC,UAAU,kBAAkB+B,EAAMS,WAEzC,yBACExC,UAAU,SACVF,MAAO,CACL2C,WAAY,MACZd,QAAS,SACTe,UAAW,SACXC,WAAY,WAGd,uBAAG7C,MAAO,CAAE8C,UAAW,SAAUC,SAAU,WAA3C,WACA,wBAAI/C,MAAO,CAAE2C,WAAY,QACtBV,EAAMe,OAAOC,KAAI,SAAAC,GAAK,OACrB,wBAAIC,IAAKD,EAAMZ,IAAKY,EAAMtB,WAIhC,yBAAK1B,UAAU,YACb,uBACEF,MAAO,CACL8C,UAAW,SACXH,WAAY,MACZd,QAAS,SACTuB,cAAe,SACfL,SAAU,SACVH,UAAW,SACXC,WAAY,WARhB,YAaA,0BACE7C,MAAO,CACL2C,WAAY,MACZC,UAAW,UACXC,WAAY,WAzET,SAAAQ,GACjB,IAAIC,EAAKC,EAKT,OAHAF,GAAoB,IADpBC,EAAME,SAASH,EAAO,KAEtBE,EAAMC,SAASH,GAET,GAAN,OAAUC,EAAM,GAAK,IAAM,IAA3B,OAAgCA,EAAhC,eAA0CC,EAA1C,OAsEaE,CAAWxB,EAAMyB,UAEpB,yBAAKxD,UAAU,WACb,uBACEF,MAAO,CACL8C,UAAW,SACXH,WAAY,MACZd,QAAS,SACTH,WAAY,SACZ0B,cAAe,SACfL,SAAU,SACVF,WAAY,WARhB,gBAaA,0BACE7C,MAAO,CACL2C,WAAY,MACZC,UAAW,UACXC,WAAY,WAGbc,IAAO1B,EAAM2B,cAAcC,OAAO,oBAK3C,yBACE3D,UAAU,cACVF,MAAO,CAAEwC,WAAY,wBAAyB/B,OAAQ,SAEtD,uBACET,MAAO,CACL+C,SAAU,SACVlB,QAAS,SACTe,UAAW,SACXlB,WAAY,WAGd,+CACCO,EAAM6B,cAET,uBACE5D,UAAU,cACVF,MAAO,CAAE6B,QAAS,+BAIxB,yBAAK3B,UAAU,kBACZ+B,EAAM8B,QAAQC,KAAKC,MAAM,EAAG,IAAIhB,KAAI,SAAAiB,GAAM,OACzC,kBAAC,EAAD,CAAQf,IAAKlB,EAAM8B,QAAQC,KAAKG,QAAQD,GAAShD,QAASgD,UCxFrDE,EAzCf,uKAEI,OAAIC,KAAKrD,MAAML,QACN,kBAAC,EAAD,MAGL,uBACES,KAAI,iBAAYiD,KAAKrD,MAAME,QAAQoB,IACnCtC,MAAO,CAAEqB,eAAgB,OAAQC,MAAO,SAExC,yBAAKpB,UAAU,OAAOF,MAAO,CAAEa,MAAO,UACpC,yBACEH,IAAG,yCAAoC2D,KAAKrD,MAAME,QAAQoD,aAC1DtE,MAAO,CAAES,OAAQ,MAAO8D,QAAS,MAAO1D,MAAO,QAC/CC,IAAI,WACJZ,UAAU,iBAEZ,yBACEA,UAAU,YACVF,MAAO,CAAEa,MAAO,QAASZ,SAAU,SAAUQ,OAAQ,UAErD,wBAAIP,UAAU,cAAcmE,KAAKrD,MAAME,QAAQuB,OAC/C,uBACEvC,UAAU,YACVF,MAAO,CAAEwE,WAAY,MAAOvE,SAAU,cAELgB,IAAhCoD,KAAKrD,MAAME,QAAQwB,SAChB2B,KAAKrD,MAAME,QAAQwB,SAAS+B,UAAU,EAAG,KAAO,OAChD,gBA5BpB,GAA2BpE,aC4BZqE,EA9BA,WACb,OACE,yBAAKxE,UAAU,iDACb,kBAAC,IAAD,CAAMA,UAAU,oBAAoBC,GAAG,KAAvC,QAGA,4BACED,UAAU,kBACVE,KAAK,SACLuE,cAAY,WACZC,cAAY,0BACZC,gBAAc,yBACdC,gBAAc,QACdC,aAAW,qBAEX,0BAAM7E,UAAU,yBAGlB,yBAAKA,UAAU,2BAA2BoC,GAAG,0BAC3C,wBAAIpC,UAAU,sBACZ,wBAAIA,UAAU,wBCeT8E,EAhCf,kLAEIX,KAAKrD,MAAMiE,qBAFf,+BAIY,IAAD,OACP,OAAIZ,KAAKrD,MAAML,QACN,kBAAC,EAAD,MAGP,oCACE,kBAAC,EAAD,MACA,yBACET,UAAU,YACViD,IAAK,EACLnD,MAAO,CACLkF,oBAAqB,gBACrB3E,QAAS,OACT4E,QAAS,WAGVd,KAAKrD,MAAMoE,UAAUnC,KAAI,SAAAhB,GAAK,OAC7B,kBAAC,EAAD,CAAOkB,IAAK,EAAKnC,MAAMoE,UAAUjB,QAAQlC,GAAQf,QAASe,aArBtE,GAA+B5B,aCgEhBgF,EA9DH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTrD,EADS,KACFsD,EADE,OAEcD,oBAAS,GAFvB,mBAET3E,EAFS,KAEA6E,EAFA,OAGkBF,mBAAS,IAH3B,mBAGTF,EAHS,KAGEK,EAHF,KAIVvD,EAAY,uCAAG,WAAMI,GAAN,eAAAoD,EAAA,6DACnBF,GAAW,GADQ,SAEDG,IAAMC,IAAN,6CACsBtD,EADtB,yEAFC,OAEbuD,EAFa,OAKnBN,EAASM,EAAIC,MACbC,QAAQC,IAAIH,EAAIC,MAChBN,GAAW,GAPQ,2CAAH,sDASZP,EAAgB,uCAAG,4BAAAS,EAAA,6DACvBF,GAAW,GACXO,QAAQC,IAAIrF,GAFW,SAGLgF,IAAMC,IACtB,kMAJqB,OAGjBC,EAHiB,OAMvBJ,EAAaI,EAAIC,KAAKG,SAEtBT,GAAW,GARY,2CAAH,qDAUtB,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,IAAIC,UAAWrG,IACjC,kBAAC,IAAD,CACEmG,OAAK,EACLC,KAAK,UACLE,OAAQ,SAAArF,GACN,OACE,kBAAC,EAAD,iBACMA,EADN,CAEEiE,iBAAkBA,EAClBtE,QAASA,EACTyE,UAAWA,QAKnB,kBAAC,IAAD,CACEc,OAAK,EACLC,KAAK,aACLE,OAAQ,SAAArF,GACN,OACE,kBAAC,EAAD,iBACMA,EADN,CAEEkB,aAAcA,EACdD,MAAOA,EACPtB,QAASA,YCrD3B2F,IAASD,OAAO,kBAAC,EAAD,MAASE,SAASC,eAAe,W","file":"static/js/main.dd6ca11e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/marvel.e65ca722.gif\";","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// import homecss from './homecss.css';\r\nexport class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{ overflow: 'hidden' }}\r\n        className='home-overlay d-flex justify-content-center align-items-center'\r\n      >\r\n        {/* <img\r\n          src={require('../../img/homeback.jpg')}\r\n          style={this.homeStyle}\r\n          alt='Home'\r\n\r\n        /> */}\r\n        <div className='text-center'>\r\n          <Link\r\n            to='./movies'\r\n            className='btn d-inline-block btn-danger'\r\n            type='submit'\r\n          >\r\n            Discover\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport loading from '../marvel.gif';\r\nexport class Loader extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ display: 'flex', alignItems: 'center', height: '100vh' }}>\r\n        <img\r\n          src={loading}\r\n          style={{ display: 'block', margin: 'auto', width: '500px' }}\r\n          alt='LOADINGGGG'\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\n\r\nexport const Member = props => {\r\n  if (\r\n    props.details.profile_path !== undefined &&\r\n    props.details.profile_path !== null\r\n  ) {\r\n    return (\r\n      <a\r\n        href='#'\r\n        className='card'\r\n        style={{\r\n          textDecoration: 'none',\r\n          color: '#000',\r\n          border: 'none',\r\n          width: '9.5rem',\r\n          border: '1px solid #e3e3e3',\r\n          padding: '0.5rem',\r\n          transition: 'transform 0.1s ease'\r\n        }}\r\n      >\r\n        <img\r\n          src={`https://image.tmdb.org/t/p/w185${props.details.profile_path}`}\r\n          className='card-img-top'\r\n          style={{\r\n            boxShadow: '5px 5px 10px #bbb,-5px -5px 10px #bbb',\r\n            display: 'inline-block',\r\n            height: '10.9rem'\r\n          }}\r\n          alt='...'\r\n        ></img>\r\n        <p\r\n          style={{\r\n            marginBottom: '-0.55rem',\r\n            paddingTop: '0.5rem',\r\n            textAlign: 'center'\r\n          }}\r\n        >\r\n          {props.details.name}\r\n        </p>\r\n        <span style={{ textAlign: 'center', padding: '0.1rem' }}>as</span>\r\n        <p className='text-center'>{props.details.character}</p>\r\n      </a>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\nexport default Member;\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport Loader from '../Loader/Loader';\r\nimport Member from '../Cast/Member';\r\nimport moment from 'moment';\r\nconst convToTime = time => {\r\n  let hrs, min;\r\n  hrs = parseInt(time / 60);\r\n  time = time - hrs * 60;\r\n  min = parseInt(time);\r\n\r\n  return `${hrs < 10 ? '0' : ''}${hrs}hrs ${min}min`;\r\n};\r\nconst FullMovie = ({ movie, getMovieById, match, loading }) => {\r\n  let url;\r\n  useEffect(() => {\r\n    getMovieById(match.params.id);\r\n\r\n    //eslint-disable-next-line\r\n  }, []);\r\n  url = `https://image.tmdb.org/t/p/original${movie.backdrop_path}`;\r\n  if (loading) {\r\n    return <Loader />;\r\n  }\r\n  return (\r\n    <div>\r\n      <div\r\n        className='movie-overlay'\r\n        style={{\r\n          height: '100vh',\r\n          width: '100vw',\r\n          background: `url(${url}) no-repeat center center/cover`\r\n        }}\r\n      >\r\n        <Link to={'/movies'}>\r\n          <i className='back fas fa-chevron-circle-left'></i>\r\n        </Link>\r\n        <div className='container'>\r\n          <div className='first-part'>\r\n            {' '}\r\n            {/* first-part => movietitle,overview*/}\r\n            <div className='movie-title'>{movie.title}</div>\r\n            <div className='movie-overview'>{movie.overview}</div>\r\n          </div>\r\n          <div\r\n            className='genres'\r\n            style={{\r\n              fontWeight: '300',\r\n              padding: '3.5rem',\r\n              marginTop: '2.8rem',\r\n              marginLeft: '1.7rem'\r\n            }}\r\n          >\r\n            <p style={{ fontStyle: 'italic', fontSize: '1.4rem' }}>GENRES:</p>\r\n            <ul style={{ fontWeight: '600' }}>\r\n              {movie.genres.map(genre => (\r\n                <li key={genre.id}>{genre.name}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <div className='run-time'>\r\n            <p\r\n              style={{\r\n                fontStyle: 'italic',\r\n                fontWeight: '300',\r\n                padding: '3.5rem',\r\n                paddingBottom: '0.2rem',\r\n                fontSize: '1.4rem',\r\n                marginTop: '2.8rem',\r\n                marginLeft: '1.7rem'\r\n              }}\r\n            >\r\n              RUNTIME:\r\n            </p>\r\n            <span\r\n              style={{\r\n                fontWeight: '600',\r\n                marginTop: '-1.1rem',\r\n                marginLeft: '5.9rem'\r\n              }}\r\n            >\r\n              {convToTime(movie.runtime)}\r\n            </span>\r\n            <div className='release'>\r\n              <p\r\n                style={{\r\n                  fontStyle: 'italic',\r\n                  fontWeight: '300',\r\n                  padding: '3.5rem',\r\n                  paddingTop: '2.5rem',\r\n                  paddingBottom: '0.2rem',\r\n                  fontSize: '1.4rem',\r\n                  marginLeft: '1.7rem'\r\n                }}\r\n              >\r\n                RELEASED ON:\r\n              </p>\r\n              <span\r\n                style={{\r\n                  fontWeight: '600',\r\n                  marginTop: '-1.1rem',\r\n                  marginLeft: '5.9rem'\r\n                }}\r\n              >\r\n                {moment(movie.release_date).format('DD MMMM YYYY')}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className='rating-info'\r\n          style={{ background: 'rgba(255,255,255,0.5)', height: '15vh' }}\r\n        >\r\n          <p\r\n            style={{\r\n              fontSize: '1.4rem',\r\n              padding: '1.1rem',\r\n              marginTop: '0.6rem',\r\n              paddingTop: '1.9rem'\r\n            }}\r\n          >\r\n            <span>Rating: &nbsp; </span>\r\n            {movie.vote_average}\r\n          </p>\r\n          <i\r\n            className='fas fa-star'\r\n            style={{ padding: 'auto 1.2rem auto 1.2rem' }}\r\n          ></i>\r\n        </div>\r\n      </div>\r\n      <div className='cast container'>\r\n        {movie.credits.cast.slice(0, 19).map(member => (\r\n          <Member key={movie.credits.cast.indexOf(member)} details={member} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nFullMovie.propTypes = {\r\n  movie: PropTypes.object.isRequired\r\n};\r\nexport default FullMovie;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Loader from '../Loader/Loader';\r\n\r\nexport class Movie extends Component {\r\n  render() {\r\n    if (this.props.loading) {\r\n      return <Loader />;\r\n    } else {\r\n      return (\r\n        <a\r\n          href={`/movie/${this.props.details.id}`}\r\n          style={{ textDecoration: 'none', color: '#000' }}\r\n        >\r\n          <div className='card' style={{ width: '19rem' }}>\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/w500${this.props.details.poster_path}`}\r\n              style={{ height: '60%', opacity: '0.9', width: '100%' }}\r\n              alt='card cap'\r\n              className='card-img-top'\r\n            />\r\n            <div\r\n              className='card-body'\r\n              style={{ width: '18rem', overflow: 'hidden', height: '12rem' }}\r\n            >\r\n              <h5 className='card-title'>{this.props.details.title}</h5>\r\n              <p\r\n                className='card-text'\r\n                style={{ lineHeight: '1.4', overflow: 'none' }}\r\n              >\r\n                {this.props.details.overview !== undefined\r\n                  ? this.props.details.overview.substring(0, 181) + '....'\r\n                  : 'undef'}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </a>\r\n      );\r\n    }\r\n  }\r\n  static propTypes = {\r\n    details: PropTypes.object.isRequired\r\n  };\r\n}\r\n\r\nexport default Movie;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className='navbar navbar-expand-lg navbar-light bg-light'>\r\n      <Link className='navbar-brand px-4' to='/'>\r\n        WMDB\r\n      </Link>\r\n      <button\r\n        className='navbar-toggler '\r\n        type='button'\r\n        data-toggle='collapse'\r\n        data-target='#navbarSupportedContent'\r\n        aria-controls='navbarSupportedContent'\r\n        aria-expanded='false'\r\n        aria-label='Toggle navigation'\r\n      >\r\n        <span className='navbar-toggler-icon'></span>\r\n      </button>\r\n\r\n      <div className='collapse navbar-collapse' id='navbarSupportedContent'>\r\n        <ul className='navbar-nav ml-auto'>\r\n          <li className='nav-item active'>\r\n            {/* <Link className='nav-link' to='/search'>\r\n              Search <span className='sr-only'>(current)</span>\r\n            </Link> */}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nexport default Navbar;\r\n","import React, { Component } from 'react';\r\nimport Movie from './Movie';\r\nimport PropTypes from 'prop-types';\r\nimport Navbar from '../navbar';\r\nimport Loader from '../Loader/Loader';\r\nexport class MovieList extends Component {\r\n  componentDidMount() {\r\n    this.props.getDefaultMovies();\r\n  }\r\n  render() {\r\n    if (this.props.loading) {\r\n      return <Loader />;\r\n    }\r\n    return (\r\n      <>\r\n        <Navbar />\r\n        <div\r\n          className='container'\r\n          key={0}\r\n          style={{\r\n            gridTemplateColumns: 'repeat(3,1fr)',\r\n            display: 'grid',\r\n            gridGap: '1.2rem'\r\n          }}\r\n        >\r\n          {this.props.movieList.map(movie => (\r\n            <Movie key={this.props.movieList.indexOf(movie)} details={movie} />\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n  static propTypes = {\r\n    movieList: PropTypes.array.isRequired\r\n  };\r\n}\r\n\r\nexport default MovieList;\r\n","import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport './App.css';\r\nimport Home from './components/pages/Home';\r\nimport axios from 'axios';\r\nimport FullMovie from './components/movieRelated/FullMovie';\r\nimport MovieList from './components/movieRelated/MovieList';\r\nconst App = () => {\r\n  const [movie, setmovie] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [movieList, setmovieList] = useState([]);\r\n  const getMovieById = async id => {\r\n    setLoading(true);\r\n    const res = await axios.get(\r\n      `https://api.themoviedb.org/3/movie/${id}?api_key=0dd6d34d512de01c5ea0775487aae815&append_to_response=credits`\r\n    );\r\n    setmovie(res.data);\r\n    console.log(res.data);\r\n    setLoading(false);\r\n  };\r\n  const getDefaultMovies = async () => {\r\n    setLoading(true);\r\n    console.log(loading);\r\n    const res = await axios.get(\r\n      'https://api.themoviedb.org/3/discover/movie?api_key=0dd6d34d512de01c5ea0775487aae815&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&append_to_response=credits'\r\n    );\r\n    setmovieList(res.data.results);\r\n    // console.log(res.data.results);\r\n    setLoading(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path='/' component={Home}></Route>\r\n          <Route\r\n            exact\r\n            path='/movies'\r\n            render={props => {\r\n              return (\r\n                <MovieList\r\n                  {...props}\r\n                  getDefaultMovies={getDefaultMovies}\r\n                  loading={loading}\r\n                  movieList={movieList}\r\n                />\r\n              );\r\n            }}\r\n          ></Route>\r\n          <Route\r\n            exact\r\n            path='/movie/:id'\r\n            render={props => {\r\n              return (\r\n                <FullMovie\r\n                  {...props}\r\n                  getMovieById={getMovieById}\r\n                  movie={movie}\r\n                  loading={loading}\r\n                />\r\n              );\r\n            }}\r\n          ></Route>\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}